# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip

stages:
  - test
  - build
  - deploy

before_script:
  - python3 -V

# We run test on local repo only when testing development branches
test_dev:
  stage: test
  only:
    changes: # Will always run on first push of new branch
      - test/*.py
      - pykarbon/*.py
      - tox.ini
  except:
    - master
    - staging
  script:
    - tox -e py35 # Use tox to run tests
  tags:
    - k300

# Always test before deploying
test_staging:
  stage: test
  only:
    - staging
  script:
    - tox
  tags:
    - k300

# Wheel for deployment to pypi
make_wheel:
  stage: build
  when: on_success
  only:
    - master
    - staging
  script:
    - python3 setup.py bdist_wheel
    - python3 setup.py sdist
  artifacts:
    paths:
    - dist/*
  tags:
    - k300

# Deploy to testpypi from staging branch
deploy_staging:
  stage: deploy
  when: on_success
  only:
    refs:
      - staging
    changes:
      - setup.py
  before_script:
    - pip install twine
  variables:
    TWINE_USERNAME: $PYPI_USER
    TWINE_PASSWORD: $TEST_PYPI_PASS
  script:
    - twine upload --repository-url https://test.pypi.org/legacy/ dist/*
  tags:
    - k300

# Deploy to live pypi from master branch
deploy_production:
  stage: deploy
  when: on_success
  only:
    refs:
      - master
    changes:
      - setup.py
  before_script:
    - pip install twine
  variables:
    TWINE_USERNAME: $PYPI_USER
    TWINE_PASSWORD: $PYPI_PASSWORD
  script:
    - twine upload dist/*
  tags:
    - k300

#pages:
#  script:
#  - cd doc ; make html
#  - mv build/html/ ../public/
#  artifacts:
#    paths:
#    - public
#  only:
#  - master
